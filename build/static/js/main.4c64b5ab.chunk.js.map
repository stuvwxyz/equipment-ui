{"version":3,"sources":["images/Equipment.png","AppNavbar.js","Home.js","EquipmentList.js","EquipmentEdit.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","AppNavbar","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","isOpen","toggle","bind","assertThisInitialized","setState","react_default","a","createElement","reactstrap_es","color","light","expand","tag","Link","to","onClick","navbar","className","href","Component","Home","isLoading","isAuthenticated","user","undefined","cookies","csrfToken","get","login","logout","fetch","credentials","response","text","body","JSON","parse","port","window","location","hostname","method","headers","X-XSRF-TOKEN","then","res","json","logoutUrl","idToken","origin","message","name","button","AppNavbar_AppNavbar","src","homeImage","alt","fluid","withCookies","EquipmentList","equipment","remove","_this2","data","catch","history","push","id","concat","Accept","Content-Type","updatedEquipment","toConsumableArray","_this3","filter","i","_this4","_this$state","equipmentList","map","key","size","equipmentId","style","whiteSpace","equipmentName","equipmentAvailable","equipmentCost","equipmentDescription","equipmentOwner","equipmentOwnerPhone","equipmentOwnerEmail","width","withRouter","EquipmentEdit","emptyItem","item","handleChange","handleSubmit","match","params","group","event","target","value","objectSpread","preventDefault","stringify","title","onSubmit","for","type","onChange","autoComplete","App","es6","BrowserRouter","Switch","Route","path","exact","component","Boolean","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"iGAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,iRCInBC,cACjB,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACfE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDQ,MAAQ,CAACC,QAAQ,GACtBR,EAAKS,OAAST,EAAKS,OAAOC,KAAZT,OAAAU,EAAA,EAAAV,QAAAU,EAAA,EAAAV,CAAAD,KAHCA,wEAOfG,KAAKS,SAAS,CACVJ,QAASL,KAAKI,MAAMC,0CAKxB,OAAOK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQC,MAAM,QAAQC,OAAK,EAACC,OAAO,MACtCN,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAaI,IAAKC,IAAMC,GAAG,KAA3B,QACAT,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAeO,QAASpB,KAAKM,SAC7BI,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAUR,OAAQL,KAAKI,MAAMC,OAAQgB,QAAM,GACvCX,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKS,UAAU,UAAUD,QAAM,GAC3BX,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAASU,KAAK,4CAAd,qBApBeC,sCCIjCC,cAOF,SAAAA,EAAY7B,GAAO,IAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAyB,IACf5B,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA2B,GAAAtB,KAAAH,KAAMJ,KAPVQ,MAAQ,CACJsB,WAAW,EACXC,iBAAiB,EACjBC,UAAMC,GAGS,IAERC,EAAWlC,EAAXkC,QAFQ,OAGfjC,EAAKO,MAAM2B,UAAYD,EAAQE,IAAI,cACnCnC,EAAKoC,MAAQpC,EAAKoC,MAAM1B,KAAXT,OAAAU,EAAA,EAAAV,QAAAU,EAAA,EAAAV,CAAAD,KACbA,EAAKqC,OAASrC,EAAKqC,OAAO3B,KAAZT,OAAAU,EAAA,EAAAV,QAAAU,EAAA,EAAAV,CAAAD,KALCA,mNASQsC,MAAM,YAAa,CAACC,YAAa,0BAAlDC,kBACaA,EAASC,cACf,MADPC,UAEFvC,KAAKS,SAAU,CAACkB,iBAAiB,IAEjC3B,KAAKS,SAAS,CAACkB,iBAAiB,EAAMC,KAAMY,KAAKC,MAAMF,uIAK3D,IAAIG,EAAQC,OAAOC,SAASF,KAAO,IAAMC,OAAOC,SAASF,KAAO,GACnD,UAATA,IACAA,EAAO,SAEXC,OAAOC,SAASrB,KAAO,KAAOoB,OAAOC,SAASC,SAAWH,EAAO,4CAIhEP,MAAM,cAAe,CAACW,OAAQ,OAAQV,YAAa,UAC/CW,QAAS,CAACC,eAAgBhD,KAAKI,MAAM2B,aAAakB,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SACjEF,KAAK,SAAAZ,GACFM,OAAOC,SAASrB,KAAOc,EAASe,UAAY,kBACxCf,EAASgB,QAAU,6BAA+BV,OAAOC,SAASU,0CAK9E,IAAMC,EAAUvD,KAAKI,MAAMwB,KACvBlB,EAAAC,EAAAC,cAAA,sBAAcZ,KAAKI,MAAMwB,KAAK4B,KAA9B,KACA9C,EAAAC,EAAAC,cAAA,4DAEE6C,EAASzD,KAAKI,MAAMuB,gBACtBjB,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQC,MAAM,QAAOJ,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAMC,GAAG,cAAT,qBACrBT,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQC,MAAM,OAAOM,QAASpB,KAAKkC,QAAnC,WAEJxB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQC,MAAM,UAAUM,QAASpB,KAAKiC,OAAtC,SAEJ,OACIvB,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAC8C,EAAD,MACAhD,EAAAC,EAAAC,cAAA,OAAKU,UAAU,OACXZ,EAAAC,EAAAC,cAAA,UAAQU,UAAU,cACdZ,EAAAC,EAAAC,cAAA,OAAK+C,IAAKC,IAAWtC,UAAU,WAAWuC,IAAI,cAC9CnD,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAWiD,OAAK,GACXP,EACAE,aA/DVjC,aAwEJuC,cAAYtC,2CCzErBuC,cAMF,SAAAA,EAAYpE,GAAO,IAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAgE,GACfnE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAkE,GAAA7D,KAAAH,KAAMJ,IADS,IAERkC,EAAWlC,EAAXkC,QAFQ,OAGfjC,EAAKO,MAAQ,CAAC6D,UAAW,GAAIlC,UAAWD,EAAQE,IAAI,cAAeN,WAAW,GAC9E7B,EAAKqE,OAASrE,EAAKqE,OAAO3D,KAAZT,OAAAU,EAAA,EAAAV,QAAAU,EAAA,EAAAV,CAAAD,KAJCA,mFAOC,IAAAsE,EAAAnE,KAChBA,KAAKS,SAAS,CAACiB,WAAW,IAE1BS,MAAM,iBAAkB,CAACC,YAAa,YACjCa,KAAK,SAAAZ,GAAQ,OAAIA,EAASc,SAC1BF,KAAK,SAAAmB,GAAI,OAAID,EAAK1D,SAAS,CAACwD,UAAWG,EAAM1C,WAAW,MACxD2C,MAAM,kBAAMF,EAAKvE,MAAM0E,QAAQC,KAAK,8EAGhCC,8FACHrC,MAAK,kBAAAsC,OAAmBD,GAAM,CAChC1B,OAAQ,SACRC,QAAS,CACLC,eAAgBhD,KAAKI,MAAM2B,UAC3B2C,OAAU,mBACVC,eAAgB,oBAEpBvC,YAAa,YACda,KAAK,WACJ,IAAI2B,EAAmB9E,OAAA+E,EAAA,EAAA/E,CAAIgF,EAAK1E,MAAM6D,WAAWc,OAAO,SAAAC,GAAC,OAAIA,EAAER,KAAOA,IACtEM,EAAKrE,SAAS,CAACwD,UAAWW,0IAIzB,IAAAK,EAAAjF,KAAAkF,EAC0BlF,KAAKI,MAA7B6D,EADFiB,EACEjB,UAEP,GAHKiB,EACaxD,UAGd,OAAOhB,EAAAC,EAAAC,cAAA,uBAGX,IAAMuE,EAAgBlB,EAAUmB,IAAI,SAAAnB,GAEhC,OAAOvD,EAAAC,EAAAC,cAAA,MAAIyE,IAAKpB,EAAUO,IACtB9D,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAaS,UAAU,iBACnBZ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQyE,KAAK,KAAKxE,MAAM,UAAUG,IAAKC,IAAMC,GAAI,kBAAoB8C,EAAUsB,aAA/E,YAGR7E,EAAAC,EAAAC,cAAA,MAAI4E,MAAO,CAACC,WAAY,WAAYxB,EAAUyB,eAC9ChF,EAAAC,EAAAC,cAAA,MAAI4E,MAAO,CAACC,WAAY,WAAYxB,EAAU0B,oBAC9CjF,EAAAC,EAAAC,cAAA,MAAI4E,MAAO,CAACC,WAAY,WAAYxB,EAAU2B,eAC9ClF,EAAAC,EAAAC,cAAA,MAAI4E,MAAO,CAACC,WAAY,WAAYxB,EAAU4B,sBAC9CnF,EAAAC,EAAAC,cAAA,MAAI4E,MAAO,CAACC,WAAY,WAAYxB,EAAU6B,gBAC9CpF,EAAAC,EAAAC,cAAA,MAAI4E,MAAO,CAACC,WAAY,WAAYxB,EAAU8B,qBAC9CrF,EAAAC,EAAAC,cAAA,MAAI4E,MAAO,CAACC,WAAY,WAAYxB,EAAU+B,qBAE9CtF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAaS,UAAU,eACnBZ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQyE,KAAK,KAAKxE,MAAM,SAASM,QAAS,kBAAM6D,EAAKf,OAAOD,EAAUsB,eAAtE,eAMhB,OACI7E,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAC8C,EAAD,MACAhD,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAWiD,OAAK,GACZpD,EAAAC,EAAAC,cAAA,OAAKU,UAAU,eACXZ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQC,MAAM,UAAUG,IAAKC,IAAMC,GAAG,sBAAtC,kBAEJT,EAAAC,EAAAC,cAAA,4BACAF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOS,UAAU,QACbZ,EAAAC,EAAAC,cAAA,aACAF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAIqF,MAAM,OAAV,UACAvF,EAAAC,EAAAC,cAAA,MAAIqF,MAAM,OAAV,QACAvF,EAAAC,EAAAC,cAAA,MAAIqF,MAAM,OAAV,aACAvF,EAAAC,EAAAC,cAAA,MAAIqF,MAAM,OAAV,eACAvF,EAAAC,EAAAC,cAAA,MAAIqF,MAAM,OAAV,eACAvF,EAAAC,EAAAC,cAAA,MAAIqF,MAAM,OAAV,SACAvF,EAAAC,EAAAC,cAAA,MAAIqF,MAAM,OAAV,eACAvF,EAAAC,EAAAC,cAAA,MAAIqF,MAAM,OAAV,eACAvF,EAAAC,EAAAC,cAAA,MAAIqF,MAAM,OAAV,YAGJvF,EAAAC,EAAAC,cAAA,aACCuE,aA3FG3D,aAoGZuC,cAAYmC,YAAWlC,YCrGjCmC,cAYF,SAAAA,EAAYvG,GAAO,IAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAmG,IACftG,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAqG,GAAAhG,KAAAH,KAAMJ,KAXVwG,UAAY,CACRV,cAAe,GACfC,mBAAoB,GACpBC,cAAe,GACfC,qBAAsB,GACtBC,eAAgB,GAChBC,oBAAqB,GACrBC,oBAAqB,IAGN,IAERlE,EAAWlC,EAAXkC,QAFQ,OAGfjC,EAAKO,MAAQ,CACTiG,KAAMxG,EAAKuG,UACXrE,UAAWD,EAAQE,IAAI,eAE3BnC,EAAKyG,aAAezG,EAAKyG,aAAa/F,KAAlBT,OAAAU,EAAA,EAAAV,QAAAU,EAAA,EAAAV,CAAAD,KACpBA,EAAK0G,aAAe1G,EAAK0G,aAAahG,KAAlBT,OAAAU,EAAA,EAAAV,QAAAU,EAAA,EAAAV,CAAAD,KARLA,oMAYoB,QAA/BG,KAAKJ,MAAM4G,MAAMC,OAAOjC,6CAEOrC,MAAK,kBAAAsC,OAAmBzE,KAAKJ,MAAM4G,MAAMC,OAAOjC,IAAM,CAACpC,YAAa,0CAAae,cAAtGuD,SACN1G,KAAKS,SAAS,CAAC4F,KAAMK,sDAErB1G,KAAKJ,MAAM0E,QAAQC,KAAK,sJAKvBoC,GACT,IAAMC,EAASD,EAAMC,OACfC,EAAQD,EAAOC,MACfrD,EAAOoD,EAAOpD,KAChB6C,EAAIvG,OAAAgH,EAAA,EAAAhH,CAAA,GAAOE,KAAKI,MAAMiG,MAC1BA,EAAK7C,GAAQqD,EACb7G,KAAKS,SAAS,CAAC4F,sFAGAM,oFACfA,EAAMI,mBACoB/G,KAAKI,MAAxBiG,SAAMtE,uBAEPI,MAAM,iBAAkB,CAC1BW,OAASuD,EAAK7B,GAAM,MAAQ,OAC5BzB,QAAS,CACLC,eAAgBjB,EAChB2C,OAAU,mBACVC,eAAgB,oBAEpBpC,KAAMC,KAAKwE,UAAUX,GACrBjE,YAAa,mBAEjBpC,KAAKJ,MAAM0E,QAAQC,KAAK,kJAGnB,IACE8B,EAAQrG,KAAKI,MAAbiG,KACDY,EAAQvG,EAAAC,EAAAC,cAAA,UAAKyF,EAAK7B,GAAK,iBAAmB,iBAEhD,OAAO9D,EAAAC,EAAAC,cAAA,WACHF,EAAAC,EAAAC,cAAC8C,EAAD,MACAhD,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACKoG,EACDvG,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMqG,SAAUlH,KAAKuG,cACjB7F,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOsG,IAAI,iBAAX,iBACAzG,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOuG,KAAK,OAAO5D,KAAK,gBAAgBgB,GAAG,gBAAgBqC,MAAOR,EAAKX,eAAiB,GACjF2B,SAAUrH,KAAKsG,aAAcgB,aAAa,mBAErD5G,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOsG,IAAI,sBAAX,sBACAzG,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOuG,KAAK,UAAU5D,KAAK,qBAAqBgB,GAAG,qBAAqBqC,MAAOR,EAAKV,oBAAsB,GACnG0B,SAAUrH,KAAKsG,aAAcgB,aAAa,wBAErD5G,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOsG,IAAI,iBAAX,iBACAzG,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOuG,KAAK,OAAO5D,KAAK,gBAAgBgB,GAAG,gBAAgBqC,MAAOR,EAAKT,eAAiB,GACjFyB,SAAUrH,KAAKsG,aAAcgB,aAAa,mBAErD5G,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOsG,IAAI,wBAAX,wBACAzG,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOuG,KAAK,OAAO5D,KAAK,uBAAuBgB,GAAG,uBAAuBqC,MAAOR,EAAKR,sBAAwB,GACtGwB,SAAUrH,KAAKsG,aAAcgB,aAAa,0BAErD5G,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOsG,IAAI,kBAAX,kBACAzG,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOuG,KAAK,OAAO5D,KAAK,iBAAiBgB,GAAG,iBAAiBqC,MAAOR,EAAKP,gBAAkB,GACpFuB,SAAUrH,KAAKsG,aAAcgB,aAAa,oBAErD5G,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOsG,IAAI,uBAAX,uBACAzG,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOuG,KAAK,OAAO5D,KAAK,sBAAsBgB,GAAG,sBAAsBqC,MAAOR,EAAKN,qBAAuB,GACnGsB,SAAUrH,KAAKsG,aAAcgB,aAAa,yBAErD5G,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOsG,IAAI,uBAAX,uBACAzG,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOuG,KAAK,OAAO5D,KAAK,sBAAsBgB,GAAG,sBAAsBqC,MAAOR,EAAKL,qBAAuB,GACnGqB,SAAUrH,KAAKsG,aAAcgB,aAAa,yBAGrD5G,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQC,MAAM,UAAUsG,KAAK,UAA7B,QAAoD,IACpD1G,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQC,MAAM,YAAYG,IAAKC,IAAMC,GAAG,cAAxC,qBA3GIK,aAmHbuC,cAAYmC,YAAWC,IChGvBoB,mLAdP,OACI7G,EAAAC,EAAAC,cAAC4G,EAAA,EAAD,KACI9G,EAAAC,EAAAC,cAAC6G,EAAA,EAAD,KACI/G,EAAAC,EAAAC,cAAC8G,EAAA,EAAD,KACIhH,EAAAC,EAAAC,cAAC+G,EAAA,EAAD,CAAOC,KAAK,IAAIC,OAAO,EAAMC,UAAWrG,IACxCf,EAAAC,EAAAC,cAAC+G,EAAA,EAAD,CAAOC,KAAK,aAAaC,OAAO,EAAMC,UAAW9D,IACjDtD,EAAAC,EAAAC,cAAC+G,EAAA,EAAD,CAAOC,KAAK,qBAAqBE,UAAW3B,cARlD3E,aCGEuG,QACW,cAA7BpF,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAS2D,MACvB,iECXNwB,IAASC,OAAOvH,EAAAC,EAAAC,cAACsH,EAAD,MAASC,SAASC,eAAe,SD0H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMtF,KAAK,SAAAuF,GACjCA,EAAaC","file":"static/js/main.4c64b5ab.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Equipment.e108aeb5.png\";","import React, { Component } from 'react';\nimport { Collapse, Nav, Navbar, NavbarBrand, NavbarToggler, NavItem, NavLink } from 'reactstrap';\nimport { Link } from 'react-router-dom';\n\nexport default class AppNavbar extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {isOpen: false};\n        this.toggle = this.toggle.bind(this);\n    }\n\n    toggle() {\n        this.setState({\n            isOpen: !this.state.isOpen\n        });\n    }\n\n    render() {\n        return <Navbar color=\"faded\" light expand=\"md\">\n            <NavbarBrand tag={Link} to=\"/\">Home</NavbarBrand>\n            <NavbarToggler onClick={this.toggle}/>\n            <Collapse isOpen={this.state.isOpen} navbar>\n                <Nav className=\"ml-auto\" navbar>\n                    <NavItem>\n                        <NavLink href=\"https://github.com/stuvwxyz/equipment-ui\">GitHub</NavLink>\n                    </NavItem>\n                </Nav>\n            </Collapse>\n        </Navbar>;\n    }\n}\n","import React, { Component } from 'react';\nimport './App.css';\nimport AppNavbar from './AppNavbar';\nimport homeImage from './images/Equipment.png';\nimport { Link } from 'react-router-dom';\nimport { Button, Container } from 'reactstrap';\nimport {withCookies} from \"react-cookie\";\n\nclass Home extends Component {\n    state = {\n        isLoading: true,\n        isAuthenticated: false,\n        user: undefined\n    };\n\n    constructor(props) {\n        super(props);\n        const {cookies} = props;\n        this.state.csrfToken = cookies.get('XSRF-TOKEN');\n        this.login = this.login.bind(this);\n        this.logout = this.logout.bind(this);\n    }\n\n    async componentDidMount() {\n        const response = await fetch('/api/user', {credentials: 'include'});\n        const body = await response.text();\n        if (body === '') {\n            this.setState(({isAuthenticated: false}))\n        } else {\n            this.setState({isAuthenticated: true, user: JSON.parse(body)})\n        }\n    }\n\n    login() {\n        let port = (window.location.port ? ':' + window.location.port : '');\n        if (port === ':3000') {\n            port = ':8080';\n        }\n        window.location.href = '//' + window.location.hostname + port + '/private';\n    }\n\n    logout() {\n        fetch('/api/logout', {method: 'POST', credentials: 'include',\n            headers: {'X-XSRF-TOKEN': this.state.csrfToken}}).then(res => res.json())\n            .then(response => {\n                window.location.href = response.logoutUrl + \"?id_token_hint=\" +\n                    response.idToken + \"&post_logout_redirect_uri=\" + window.location.origin;\n            });\n    }\n\n    render() {\n        const message = this.state.user ?\n            <h2>Welcome, {this.state.user.name}!</h2> :\n            <p>Please log in to manage your equipment rentals.</p>;\n\n        const button = this.state.isAuthenticated ?\n            <div>\n                <Button color=\"link\"><Link to=\"/equipment\">Manage Equipment</Link></Button>\n                <br/>\n                <Button color=\"link\" onClick={this.logout}>Logout</Button>\n            </div> :\n            <Button color=\"primary\" onClick={this.login}>Login</Button>;\n\n        return (\n            <div>\n                <AppNavbar/>\n                <div className=\"App\">\n                    <header className=\"App-header\">\n                        <img src={homeImage} className=\"App-logo\" alt=\"homeImage\" />\n                        <Container fluid>\n                            {message}\n                            {button}\n                        </Container>\n                    </header>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withCookies(Home);\n","import React, { Component } from 'react';\nimport { Button, ButtonGroup, Container, Table } from 'reactstrap';\nimport AppNavbar from './AppNavbar';\nimport {Link, withRouter} from 'react-router-dom';\nimport {instanceOf} from \"prop-types\";\nimport {Cookies, withCookies} from \"react-cookie\";\n\nclass EquipmentList extends Component {\n\n    static propTypes = {\n        cookies: instanceOf(Cookies).isRequired\n    };\n\n    constructor(props) {\n        super(props);\n        const {cookies} = props;\n        this.state = {equipment: [], csrfToken: cookies.get('XSRF-TOKEN'), isLoading: true};\n        this.remove = this.remove.bind(this);\n    }\n\n    componentDidMount() {\n        this.setState({isLoading: true});\n\n        fetch('/api/equipment', {credentials: 'include'})\n            .then(response => response.json())\n            .then(data => this.setState({equipment: data, isLoading: false}))\n            .catch(() => this.props.history.push('/'));\n    }\n\n    async remove(id) {\n        await fetch(`/api/equipment/${id}`, {\n            method: 'DELETE',\n            headers: {\n                'X-XSRF-TOKEN': this.state.csrfToken,\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            credentials: 'include'\n        }).then(() => {\n            let updatedEquipment = [...this.state.equipment].filter(i => i.id !== id);\n            this.setState({equipment: updatedEquipment});\n        });\n    }\n\n    render() {\n        const {equipment, isLoading} = this.state;\n\n        if (isLoading) {\n            return <p>Loading...</p>;\n        }\n\n        const equipmentList = equipment.map(equipment => {\n\n            return <tr key={equipment.id}>\n                <td>\n                    <ButtonGroup className=\"float-lef   t\">\n                        <Button size=\"sm\" color=\"primary\" tag={Link} to={\"/equipmentedit/\" + equipment.equipmentId}>Update</Button>\n                    </ButtonGroup>\n                </td>\n                <td style={{whiteSpace: 'nowrap'}}>{equipment.equipmentName}</td>\n                <td style={{whiteSpace: 'nowrap'}}>{equipment.equipmentAvailable}</td>\n                <td style={{whiteSpace: 'nowrap'}}>{equipment.equipmentCost}</td>\n                <td style={{whiteSpace: 'nowrap'}}>{equipment.equipmentDescription}</td>\n                <td style={{whiteSpace: 'nowrap'}}>{equipment.equipmentOwner}</td>\n                <td style={{whiteSpace: 'nowrap'}}>{equipment.equipmentOwnerPhone}</td>\n                <td style={{whiteSpace: 'nowrap'}}>{equipment.equipmentOwnerEmail}</td>\n\n                <td>\n                    <ButtonGroup className=\"float-right\">\n                        <Button size=\"sm\" color=\"danger\" onClick={() => this.remove(equipment.equipmentId)} >Remove</Button>\n                    </ButtonGroup>\n                </td>\n            </tr>\n        });\n\n        return (\n            <div>\n                <AppNavbar/>\n                <Container fluid>\n                    <div className=\"float-right\">\n                        <Button color=\"success\" tag={Link} to=\"/equipmentedit/new\">Add Equipment</Button>\n                    </div>\n                    <h3>Equipment List</h3>\n                    <Table className=\"mt-4\">\n                        <thead>\n                        <tr>\n                            <th width=\"10%\">Update</th>\n                            <th width=\"10%\">Item</th>\n                            <th width=\"10%\">Available</th>\n                            <th width=\"15%\">Rental Cost</th>\n                            <th width=\"20%\">Description</th>\n                            <th width=\"15%\">Owner</th>\n                            <th width=\"10%\">Owner Phone</th>\n                            <th width=\"15%\">Owner Email</th>\n                            <th width=\"10%\">Remove</th>\n                        </tr>\n                        </thead>\n                        <tbody>\n                        {equipmentList}\n                        </tbody>\n                    </Table>\n                </Container>\n            </div>\n        );\n    }\n}\n\nexport default  withCookies(withRouter(EquipmentList));\n","import React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { Button, Container, Form, FormGroup, Input, Label } from 'reactstrap';\nimport AppNavbar from './AppNavbar';\nimport {withCookies} from \"react-cookie\";\n\nclass EquipmentEdit extends Component {\n\n    emptyItem = {\n        equipmentName: '',\n        equipmentAvailable: '',\n        equipmentCost: '',\n        equipmentDescription: '',\n        equipmentOwner: '',\n        equipmentOwnerPhone: '',\n        equipmentOwnerEmail: ''\n    };\n\n    constructor(props) {\n        super(props);\n        const {cookies} = props;\n        this.state = {\n            item: this.emptyItem,\n            csrfToken: cookies.get('XSRF-TOKEN')\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    async componentDidMount() {\n        if (this.props.match.params.id !== 'new') {\n            try {\n                const group = await (await fetch(`/api/equipment/${this.props.match.params.id}`, {credentials: 'include'})).json();\n                this.setState({item: group});\n            } catch (error) {\n                this.props.history.push('/');\n            }\n        }\n    }\n\n    handleChange(event) {\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n        let item = {...this.state.item};\n        item[name] = value;\n        this.setState({item});\n    }\n\n    async handleSubmit(event) {\n        event.preventDefault();\n        const {item, csrfToken} = this.state;\n\n        await fetch('/api/equipment', {\n            method: (item.id) ? 'PUT' : 'POST',\n            headers: {\n                'X-XSRF-TOKEN': csrfToken,\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(item),\n            credentials: 'include'\n        });\n        this.props.history.push('/equipment');\n    }\n\n    render() {\n        const {item} = this.state;\n        const title = <h2>{item.id ? 'Edit Equipment' : 'Add Equipment'}</h2>;\n\n        return <div>\n            <AppNavbar/>\n            <Container>\n                {title}\n                <Form onSubmit={this.handleSubmit}>\n                    <FormGroup>\n                        <Label for=\"equipmentName\">equipmentName</Label>\n                        <Input type=\"text\" name=\"equipmentName\" id=\"equipmentName\" value={item.equipmentName || ''}\n                               onChange={this.handleChange} autoComplete=\"equipmentName\"/>\n                    </FormGroup>\n                    <FormGroup>\n                        <Label for=\"equipmentAvailable\">equipmentAvailable</Label>\n                        <Input type=\"boolean\" name=\"equipmentAvailable\" id=\"equipmentAvailable\" value={item.equipmentAvailable || ''}\n                               onChange={this.handleChange} autoComplete=\"equipmentAvailable\"/>\n                    </FormGroup>\n                    <FormGroup>\n                        <Label for=\"equipmentCost\">equipmentCost</Label>\n                        <Input type=\"text\" name=\"equipmentCost\" id=\"equipmentCost\" value={item.equipmentCost || ''}\n                               onChange={this.handleChange} autoComplete=\"equipmentCost\"/>\n                    </FormGroup>\n                    <FormGroup>\n                        <Label for=\"equipmentDescription\">equipmentDescription</Label>\n                        <Input type=\"text\" name=\"equipmentDescription\" id=\"equipmentDescription\" value={item.equipmentDescription || ''}\n                               onChange={this.handleChange} autoComplete=\"equipmentDescription\"/>\n                    </FormGroup>\n                    <FormGroup>\n                        <Label for=\"equipmentOwner\">equipmentOwner</Label>\n                        <Input type=\"text\" name=\"equipmentOwner\" id=\"equipmentOwner\" value={item.equipmentOwner || ''}\n                               onChange={this.handleChange} autoComplete=\"equipmentOwner\"/>\n                    </FormGroup>\n                    <FormGroup>\n                        <Label for=\"equipmentOwnerPhone\">equipmentOwnerPhone</Label>\n                        <Input type=\"text\" name=\"equipmentOwnerPhone\" id=\"equipmentOwnerPhone\" value={item.equipmentOwnerPhone || ''}\n                               onChange={this.handleChange} autoComplete=\"equipmentOwnerPhone\"/>\n                    </FormGroup>\n                    <FormGroup>\n                        <Label for=\"equipmentOwnerEmail\">equipmentOwnerEmail</Label>\n                        <Input type=\"text\" name=\"equipmentOwnerEmail\" id=\"equipmentOwnerEmail\" value={item.equipmentOwnerEmail || ''}\n                               onChange={this.handleChange} autoComplete=\"equipmentOwnerEmail\"/>\n                    </FormGroup>\n\n                    <FormGroup>\n                        <Button color=\"primary\" type=\"submit\">Save</Button>{' '}\n                        <Button color=\"secondary\" tag={Link} to=\"/equipment\">Cancel</Button>\n                    </FormGroup>\n                </Form>\n            </Container>\n        </div>\n    }\n}\n\nexport default withCookies(withRouter(EquipmentEdit));\n","import React, {Component} from 'react';\nimport './App.css';\nimport Home from './Home';\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\nimport {CookiesProvider} from 'react-cookie';\nimport EquipmentList from './EquipmentList';\nimport EquipmentEdit from \"./EquipmentEdit\";\n\n\nclass App extends Component {\n    render() {\n        return (\n            <CookiesProvider>\n                <Router>\n                    <Switch>\n                        <Route path='/' exact={true} component={Home}/>\n                        <Route path='/equipment' exact={true} component={EquipmentList}/>\n                        <Route path='/equipmentedit/:id' component={EquipmentEdit}/>\n                    </Switch>\n                </Router>\n            </CookiesProvider>\n        )\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}