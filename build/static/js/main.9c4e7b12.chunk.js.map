{"version":3,"sources":["images/Equipment.png","Auth.js","Navbar.js","Home.js","EquipmentList.js","EquipmentEdit.js","EquipmentCheckout.js","EquipmentCheckin.js","Callback.js","SecuredRoute/SecuredRoute.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","auth0Client","Auth","Object","classCallCheck","this","auth0","WebAuth","domain","audience","clientID","redirectUri","responseType","scope","getProfile","bind","handleAuthentication","isAuthenticated","signIn","signOut","profile","idToken","Date","getTime","expiresAt","authorize","_this","Promise","resolve","reject","parseHash","err","authResult","setSession","idTokenPayload","exp","logout","returnTo","_this2","checkSession","withRouter","props","react_default","a","createElement","reactstrap_es","color","light","expand","className","nav","inNavbar","caret","left","tag","Link","to","divider","href","target","onClick","name","history","replace","Home","Navbar","src","homeImage","alt","fluid","Component","EquipmentList","possibleConstructorReturn","getPrototypeOf","call","state","equipment","isLoading","remove","assertThisInitialized","setState","fetch","then","response","json","data","id","concat","method","headers","Accept","Content-Type","updatedEquipment","toConsumableArray","_this3","filter","i","_this4","_this$state","equipmentList","map","key","equipmentOwner","size","equipmentId","disabled","style","whiteSpace","equipmentName","equipmentAvailable","equipmentCost","equipmentDescription","equipmentOwnerPhone","equipmentOwnerEmail","width","EquipmentEdit","emptyItem","item","handleChange","handleSubmit","match","params","group","event","value","objectSpread","preventDefault","body","JSON","stringify","push","title","onSubmit","for","type","onChange","autoComplete","Callback","SecuredRoute","component","path","checkingSession","Route","render","App","location","pathname","silentAuth","forceUpdate","_context","t0","error","console","log","BrowserRouter","Switch","exact","SecuredRoute_SecuredRoute","EquipmentCheckout","EquipmentCheckin","Boolean","window","hostname","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9c4e7b12.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Equipment.e108aeb5.png\";","import auth0 from 'auth0-js';\n\nclass Auth {\n    constructor() {\n        this.auth0 = new auth0.WebAuth({\n            // the following three lines MUST be updated\n            domain: 'gordianknots.auth0.com',\n            audience: 'https://gordianknots.auth0.com/userinfo',\n            clientID: 'XsDHvnpcFQa2JGoeCFmPrD0v7IUI7iJG',\n            redirectUri: 'https://ics370-equipment.herokuapp.com/callback',\n            // redirectUri: 'http://localhost:3000/callback',\n            responseType: 'id_token',\n            scope: 'openid profile'\n        });\n\n        this.getProfile = this.getProfile.bind(this);\n        this.handleAuthentication = this.handleAuthentication.bind(this);\n        this.isAuthenticated = this.isAuthenticated.bind(this);\n        this.signIn = this.signIn.bind(this);\n        this.signOut = this.signOut.bind(this);\n    }\n\n    getProfile() {\n        return this.profile;\n    }\n\n    getIdToken() {\n        return this.idToken;\n    }\n\n    isAuthenticated() {\n        return new Date().getTime() < this.expiresAt;\n    }\n\n    signIn() {\n        this.auth0.authorize();\n    }\n\n    handleAuthentication() {\n        return new Promise((resolve, reject) => {\n            this.auth0.parseHash((err, authResult) => {\n                if (err) return reject(err);\n                if (!authResult || !authResult.idToken) {\n                    return reject(err);\n                }\n                this.setSession(authResult);\n                resolve();\n            });\n        })\n    }\n\n    setSession(authResult) {\n        this.idToken = authResult.idToken;\n        this.profile = authResult.idTokenPayload;\n        // set the time that the id token will expire at\n        this.expiresAt = authResult.idTokenPayload.exp * 1000;\n    }\n\n    signOut() {\n        this.auth0.logout({\n            returnTo: 'https://ics370-equipment.herokuapp.com',\n            // returnTo: 'http://localhost:3000',\n            clientID: 'XsDHvnpcFQa2JGoeCFmPrD0v7IUI7iJG',\n        });\n    }\n\n    silentAuth() {\n        return new Promise((resolve, reject) => {\n            this.auth0.checkSession({}, (err, authResult) => {\n                if (err) return reject(err);\n                this.setSession(authResult);\n                resolve();\n            });\n        });\n    }\n}\n\n\nconst auth0Client = new Auth();\n\nexport default auth0Client;\n","import React, { Component } from 'react';\nimport { Collapse,\n    Nav,\n    Navbar,\n    NavbarBrand,\n    NavbarToggler,\n    NavItem,\n    NavLink,\n    UncontrolledDropdown,\n    DropdownToggle,\n    DropdownMenu,\n    DropdownItem } from 'reactstrap';\nimport { Link, withRouter } from 'react-router-dom';\nimport auth0Client from './Auth';\n\nfunction NavBar(props) {\n    const signOut = () => {\n        auth0Client.signOut();\n        props.history.replace('/');\n    };\n\n    return (\n        <Navbar color=\"faded\" light expand=\"md\">\n            <Nav className=\"navbar navbar-dark bg-dark fixed-top\">\n                <UncontrolledDropdown nav inNavbar>\n                    <DropdownToggle nav caret>\n                        Menu\n                    </DropdownToggle>\n                    <DropdownMenu left>\n                        <DropdownItem tag={Link} to=\"/\">\n                            Home\n                        </DropdownItem>\n                        <DropdownItem divider />\n                        <DropdownItem tag={Link} to=\"/equipment\">\n                            Manage Equipment\n                        </DropdownItem>\n                        <DropdownItem divider />\n                        <DropdownItem divider />\n                        <DropdownItem tag=\"a\" href=\"https://github.com/stuvwxyz/equipment-ui\" target=\"_blank\">\n                            GitHub UI\n                        </DropdownItem>\n                        <DropdownItem tag=\"a\" href=\"https://github.com/stuvwxyz/equipment-api\" target=\"_blank\">\n                            GitHub API\n                        </DropdownItem>\n                    </DropdownMenu>\n                </UncontrolledDropdown>\n                {\n                    !auth0Client.isAuthenticated() &&\n                    <button className=\"btn btn-dark\" onClick={auth0Client.signIn}>Sign In</button>\n                }\n                {\n                    auth0Client.isAuthenticated() &&\n                    <div>\n                        <label className=\"mr-2 text-white\">{auth0Client.getProfile().name}</label>\n                        <button className=\"btn btn-dark\" onClick={() => {signOut()}}>Sign Out</button>\n                    </div>\n                }\n            </Nav>\n        </Navbar>\n    );\n}\n\nexport default withRouter(NavBar);\n","import React, { Component } from 'react';\nimport './App.css';\nimport Navbar from './Navbar';\nimport homeImage from './images/Equipment.png';\nimport { Link } from 'react-router-dom';\nimport { Button, Container } from 'reactstrap';\n\nclass Home extends Component {\n    render() {\n        return (\n            <div>\n                <Navbar/>\n                <div className=\"App\">\n                    <header className=\"App-header\">\n                        <img src={homeImage} className=\"App-logo\" alt=\"homeImage\" />\n                        <Container fluid>\n                            <Button color=\"link\"><Link to=\"/equipment\">Manage Equipment</Link></Button>\n                        </Container>\n                    </header>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Home;\n","import React, {Component} from 'react';\nimport {Button, ButtonGroup, Container, Nav, Table} from 'reactstrap';\nimport Navbar from './Navbar';\nimport {Link, withRouter} from 'react-router-dom';\nimport auth0Client from './Auth';\n\nclass EquipmentList extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {equipment: [], isLoading: true};\n        this.remove = this.remove.bind(this);\n    }\n\n    componentDidMount() {\n        this.setState({isLoading: true});\n\n        fetch('/api/equipment')\n            .then(response => response.json())\n            .then(data => this.setState({equipment: data, isLoading: false}));\n    }\n\n    async remove(id) {\n        await fetch(`/api/equipment/${id}`, {\n            method: 'DELETE',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            }\n        }).then(() => {\n            let updatedEquipment = [...this.state.equipment].filter(i => i.id !== id);\n            this.setState({equipment: updatedEquipment});\n        });\n    }\n\n    render() {\n        if (!auth0Client.isAuthenticated()) return null;\n\n        const {equipment, isLoading} = this.state;\n\n        if (isLoading) {\n            return <p>Loading...</p>;\n        }\n\n        const equipmentList = equipment.map(equipment => {\n\n            return <tr key={equipment.id}>\n                {\n                    equipment.equipmentOwner == auth0Client.getProfile().name &&\n                    <td>\n                        <ButtonGroup className=\"float-left\">\n                            <Button size=\"sm\" color=\"primary\" tag={Link}\n                                    to={\"/equipmentedit/\" + equipment.equipmentId}>Update</Button>\n                        </ButtonGroup>\n                    </td>\n                }\n                {\n                    equipment.equipmentOwner !== auth0Client.getProfile().name &&\n                    <td>\n                        <ButtonGroup className=\"float-left\">\n                            <Button size=\"sm\" color=\"secondary\" disabled>Not Owner</Button>\n                        </ButtonGroup>\n                    </td>\n                }\n                <td style={{whiteSpace: 'nowrap'}}>{equipment.equipmentName}</td>\n                {\n                    equipment.equipmentAvailable &&\n                    <td>\n                        <ButtonGroup className=\"float-left\">\n                            <Button size=\"sm\" color=\"primary\" tag={Link}\n                                    to={\"/equipmentcheckin/\" + equipment.equipmentId}>{equipment.equipmentAvailable}</Button>\n                        </ButtonGroup>\n                    </td>\n                }\n                {\n                    !equipment.equipmentAvailable &&\n                    <td>\n                        <ButtonGroup className=\"float-left\">\n                            <Button size=\"sm\" color=\"success\" tag={Link}\n                                    to={\"/equipmentcheckout/\" + equipment.equipmentId}>Check Out</Button>\n                        </ButtonGroup>\n                    </td>\n                }\n                <td style={{whiteSpace: 'nowrap'}}>{equipment.equipmentCost}</td>\n                <td style={{whiteSpace: 'nowrap'}}>{equipment.equipmentDescription}</td>\n                <td style={{whiteSpace: 'nowrap'}}>{equipment.equipmentOwner}</td>\n                <td style={{whiteSpace: 'nowrap'}}>{equipment.equipmentOwnerPhone}</td>\n                <td style={{whiteSpace: 'nowrap'}}>{equipment.equipmentOwnerEmail}</td>\n\n                {\n                    equipment.equipmentOwner == auth0Client.getProfile().name &&\n                    <td>\n                        <ButtonGroup className=\"float-right\">\n                            <Button size=\"sm\" color=\"danger\"\n                                    onClick={() => this.remove(equipment.equipmentId)}>Remove</Button>\n                        </ButtonGroup>\n                    </td>\n                }\n                {\n                    equipment.equipmentOwner !== auth0Client.getProfile().name &&\n                    <td>\n                        <ButtonGroup className=\"float-left\">\n                            <Button size=\"sm\" color=\"secondary\" disabled>Not Owner</Button>\n                        </ButtonGroup>\n                    </td>\n                }\n            </tr>\n        });\n\n        return (\n            <div>\n                <Navbar/>\n                <Container fluid>\n                    <div className=\"float-right\">\n                        <Button color=\"success\" tag={Link} to=\"/equipmentedit/new\">Add Equipment</Button>\n                    </div>\n                    <h3>Equipment List</h3>\n                    <Table className=\"mt-4\">\n                        <thead>\n                        <tr>\n                            <th width=\"10%\">Update</th>\n                            <th width=\"10%\">Item</th>\n                            <th width=\"10%\">Check Out</th>\n                            <th width=\"15%\">Rental Cost</th>\n                            <th width=\"20%\">Description</th>\n                            <th width=\"15%\">Owner</th>\n                            <th width=\"10%\">Owner Phone</th>\n                            <th width=\"15%\">Owner Email</th>\n                            <th width=\"10%\">Remove</th>\n                        </tr>\n                        </thead>\n                        <tbody>\n                        {equipmentList}\n                        </tbody>\n                    </Table>\n                </Container>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(EquipmentList);\n","import React, { Component } from 'react';\nimport { Button, Container, Form, FormGroup, Input, Label } from 'reactstrap';\nimport Navbar from './Navbar';\nimport { Link, withRouter } from 'react-router-dom';\nimport auth0Client from './Auth';\n\nclass EquipmentEdit extends Component {\n\n    emptyItem = {\n        equipmentName: '',\n        equipmentAvailable: '',\n        equipmentCost: '',\n        equipmentDescription: '',\n        equipmentOwner: '',\n        equipmentOwnerPhone: '',\n        equipmentOwnerEmail: ''\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            item: this.emptyItem,\n        };\n        this.emptyItem.equipmentOwner = auth0Client.getProfile().name;\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    async componentDidMount() {\n        if (this.props.match.params.id !== 'new') {\n            const group = await (await fetch(`/api/equipment/${this.props.match.params.id}`)).json();\n            this.setState({item: group});\n        }\n    }\n\n    handleChange(event) {\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n        let item = {...this.state.item};\n        item[name] = value;\n        this.setState({item});\n    }\n\n    async handleSubmit(event) {\n        event.preventDefault();\n        const {item} = this.state;\n\n        await fetch('/api/equipment', {\n            method: (item.id) ? 'PUT' : 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(item),\n        });\n        this.props.history.push('/equipment');\n    }\n\n    render() {\n        if (!auth0Client.isAuthenticated()) return null;\n\n        const {item} = this.state;\n        const title = <h2>{item.id ? 'Edit Equipment' : 'Add Equipment'}</h2>;\n\n        return <div>\n            <Navbar/>\n            <Container>\n                {title}\n                <Form onSubmit={this.handleSubmit}>\n                    <FormGroup>\n                        <Label for=\"equipmentName\">Name of Item</Label>\n                        <Input type=\"text\" name=\"equipmentName\" id=\"equipmentName\" value={item.equipmentName || ''}\n                               onChange={this.handleChange} autoComplete=\"equipmentName\"/>\n                    </FormGroup>\n                    <FormGroup>\n                        <Label for=\"equipmentAvailable\">Is it Checked Out</Label>\n                        <Input type=\"boolean\" name=\"equipmentAvailable\" id=\"equipmentAvailable\" value={item.equipmentAvailable || ''}\n                               onChange={this.handleChange} autoComplete=\"equipmentAvailable\"/>\n                    </FormGroup>\n                    <FormGroup>\n                        <Label for=\"equipmentCost\">Cost</Label>\n                        <Input type=\"text\" name=\"equipmentCost\" id=\"equipmentCost\" value={item.equipmentCost || ''}\n                               onChange={this.handleChange} autoComplete=\"equipmentCost\"/>\n                    </FormGroup>\n                    <FormGroup>\n                        <Label for=\"equipmentDescription\">Description</Label>\n                        <Input type=\"text\" name=\"equipmentDescription\" id=\"equipmentDescription\" value={item.equipmentDescription || ''}\n                               onChange={this.handleChange} autoComplete=\"equipmentDescription\"/>\n                    </FormGroup>\n                    <FormGroup>\n                        <Label for=\"equipmentOwner\">Owner</Label>\n                        <Input type=\"text\" name=\"equipmentOwner\" id=\"equipmentOwner\" value={item.equipmentOwner}\n                               onChange={this.handleChange} autoComplete=\"equipmentOwner\"/>\n                    </FormGroup>\n                    <FormGroup>\n                        <Label for=\"equipmentOwnerPhone\">Owner Phone Number</Label>\n                        <Input type=\"text\" name=\"equipmentOwnerPhone\" id=\"equipmentOwnerPhone\" value={item.equipmentOwnerPhone || ''}\n                               onChange={this.handleChange} autoComplete=\"equipmentOwnerPhone\"/>\n                    </FormGroup>\n                    <FormGroup>\n                        <Label for=\"equipmentOwnerEmail\">Owner Email</Label>\n                        <Input type=\"text\" name=\"equipmentOwnerEmail\" id=\"equipmentOwnerEmail\" value={item.equipmentOwnerEmail || ''}\n                               onChange={this.handleChange} autoComplete=\"equipmentOwnerEmail\"/>\n                    </FormGroup>\n\n                    <FormGroup>\n                        <Button color=\"primary\" type=\"submit\">Save</Button>{' '}\n                        <Button color=\"secondary\" tag={Link} to=\"/equipment\">Cancel</Button>\n                    </FormGroup>\n                </Form>\n            </Container>\n        </div>\n    }\n}\n\nexport default withRouter(EquipmentEdit);\n","import React, { Component } from 'react';\nimport { Button, Container, Form, FormGroup, Input, Label } from 'reactstrap';\nimport Navbar from './Navbar';\nimport { Link, withRouter } from 'react-router-dom';\nimport auth0Client from './Auth';\n\nclass EquipmentEdit extends Component {\n\n    emptyItem = {\n        equipmentName: '',\n        equipmentAvailable: '',\n        equipmentCost: '',\n        equipmentDescription: '',\n        equipmentOwner: '',\n        equipmentOwnerPhone: '',\n        equipmentOwnerEmail: ''\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            item: this.emptyItem,\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    async componentDidMount() {\n        if (this.props.match.params.id !== 'new') {\n            const group = await (await fetch(`/api/equipment/${this.props.match.params.id}`)).json();\n            this.setState({item: group});\n        }\n    }\n\n    handleChange(event) {\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n        let item = {...this.state.item};\n        item[name] = value;\n        this.setState({item});\n    }\n\n    async handleSubmit(event) {\n        event.preventDefault();\n        const {item} = this.state;\n\n        await fetch('/api/equipment', {\n            method: (item.id) ? 'PUT' : 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(item),\n        });\n        this.props.history.push('/equipment');\n    }\n\n    render() {\n        if (!auth0Client.isAuthenticated()) return null;\n\n        const {item} = this.state;\n        const title = <h2 color=\"secondary\">Checkout Item</h2>;\n\n        return <div>\n            <Navbar/>\n            <Container>\n                {title}\n                {item.equipmentAvailable = auth0Client.getProfile().name}\n                <Form onSubmit={this.handleSubmit}>\n                    <FormGroup>\n                        <Label for=\"equipmentName\">Name of Item</Label>\n                        <Input type=\"text\" name=\"equipmentName\" id=\"equipmentName\" value={item.equipmentName || ''}\n                               onChange={this.handleChange} autoComplete=\"equipmentName\"/>\n                    </FormGroup>\n                    <FormGroup>\n                        <Label for=\"equipmentAvailable\">Is it Checked Out</Label>\n                        <Input type=\"boolean\" name=\"equipmentAvailable\" id=\"equipmentAvailable\" value={item.equipmentAvailable}\n                               onChange={this.handleChange} autoComplete=\"equipmentAvailable\"/>\n                    </FormGroup>\n                    <FormGroup>\n                        <Label for=\"equipmentCost\">Cost</Label>\n                        <Input type=\"text\" name=\"equipmentCost\" id=\"equipmentCost\" value={item.equipmentCost || ''}\n                               onChange={this.handleChange} autoComplete=\"equipmentCost\"/>\n                    </FormGroup>\n                    <FormGroup>\n                        <Label for=\"equipmentDescription\">Description</Label>\n                        <Input type=\"text\" name=\"equipmentDescription\" id=\"equipmentDescription\" value={item.equipmentDescription || ''}\n                               onChange={this.handleChange} autoComplete=\"equipmentDescription\"/>\n                    </FormGroup>\n                    <FormGroup>\n                        <Label for=\"equipmentOwner\">Owner</Label>\n                        <Input type=\"text\" name=\"equipmentOwner\" id=\"equipmentOwner\" value={item.equipmentOwner}\n                               onChange={this.handleChange} autoComplete=\"equipmentOwner\"/>\n                    </FormGroup>\n                    <FormGroup>\n                        <Label for=\"equipmentOwnerPhone\">Owner Phone Number</Label>\n                        <Input type=\"text\" name=\"equipmentOwnerPhone\" id=\"equipmentOwnerPhone\" value={item.equipmentOwnerPhone || ''}\n                               onChange={this.handleChange} autoComplete=\"equipmentOwnerPhone\"/>\n                    </FormGroup>\n                    <FormGroup>\n                        <Label for=\"equipmentOwnerEmail\">Owner Email</Label>\n                        <Input type=\"text\" name=\"equipmentOwnerEmail\" id=\"equipmentOwnerEmail\" value={item.equipmentOwnerEmail || ''}\n                               onChange={this.handleChange} autoComplete=\"equipmentOwnerEmail\"/>\n                    </FormGroup>\n\n                    <FormGroup>\n                        <Button color=\"primary\" type=\"submit\">Save</Button>{'  '}\n                        <Button color=\"secondary\" tag={Link} to=\"/equipment\">Cancel</Button>{'  '}\n                        <Button color=\"primary\" tag=\"a\" href=\"https://www.paypal.com/us/home\" target=\"_blank\">Pay for Item</Button>{'  '}\n                    </FormGroup>\n                </Form>\n            </Container>\n        </div>\n    }\n}\n\nexport default withRouter(EquipmentEdit);\n","import React, { Component } from 'react';\nimport { Button, Container, Form, FormGroup, Input, Label } from 'reactstrap';\nimport Navbar from './Navbar';\nimport { Link, withRouter } from 'react-router-dom';\nimport auth0Client from './Auth';\n\nclass EquipmentEdit extends Component {\n\n    emptyItem = {\n        equipmentName: '',\n        equipmentAvailable: '',\n        equipmentCost: '',\n        equipmentDescription: '',\n        equipmentOwner: '',\n        equipmentOwnerPhone: '',\n        equipmentOwnerEmail: ''\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            item: this.emptyItem,\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    async componentDidMount() {\n        if (this.props.match.params.id !== 'new') {\n            const group = await (await fetch(`/api/equipment/${this.props.match.params.id}`)).json();\n            this.setState({item: group});\n        }\n    }\n\n    handleChange(event) {\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n        let item = {...this.state.item};\n        item[name] = value;\n        this.setState({item});\n    }\n\n    async handleSubmit(event) {\n        event.preventDefault();\n        const {item} = this.state;\n\n        await fetch('/api/equipment', {\n            method: (item.id) ? 'PUT' : 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(item),\n        });\n        this.props.history.push('/equipment');\n    }\n\n    render() {\n        if (!auth0Client.isAuthenticated()) return null;\n\n        const {item} = this.state;\n        const title = <h2 color=\"primary\">Checkin Item</h2>;\n\n        return <div>\n            <Navbar/>\n            <Container>\n                {title}\n                {item.equipmentAvailable = ''}\n                <Form onSubmit={this.handleSubmit}>\n                    <FormGroup>\n                        <Label for=\"equipmentName\">Name of Item</Label>\n                        <Input type=\"text\" name=\"equipmentName\" id=\"equipmentName\" value={item.equipmentName || ''}\n                               onChange={this.handleChange} autoComplete=\"equipmentName\"/>\n                    </FormGroup>\n                    <FormGroup>\n                        <Label for=\"equipmentAvailable\">Is it Checked Out</Label>\n                        <Input type=\"boolean\" name=\"equipmentAvailable\" id=\"equipmentAvailable\" value={item.equipmentAvailable}\n                               onChange={this.handleChange} autoComplete=\"equipmentAvailable\"/>\n                    </FormGroup>\n                    <FormGroup>\n                        <Label for=\"equipmentCost\">Cost</Label>\n                        <Input type=\"text\" name=\"equipmentCost\" id=\"equipmentCost\" value={item.equipmentCost || ''}\n                               onChange={this.handleChange} autoComplete=\"equipmentCost\"/>\n                    </FormGroup>\n                    <FormGroup>\n                        <Label for=\"equipmentDescription\">Description</Label>\n                        <Input type=\"text\" name=\"equipmentDescription\" id=\"equipmentDescription\" value={item.equipmentDescription || ''}\n                               onChange={this.handleChange} autoComplete=\"equipmentDescription\"/>\n                    </FormGroup>\n                    <FormGroup>\n                        <Label for=\"equipmentOwner\">Owner</Label>\n                        <Input type=\"text\" name=\"equipmentOwner\" id=\"equipmentOwner\" value={item.equipmentOwner}\n                               onChange={this.handleChange} autoComplete=\"equipmentOwner\"/>\n                    </FormGroup>\n                    <FormGroup>\n                        <Label for=\"equipmentOwnerPhone\">Owner Phone Number</Label>\n                        <Input type=\"text\" name=\"equipmentOwnerPhone\" id=\"equipmentOwnerPhone\" value={item.equipmentOwnerPhone || ''}\n                               onChange={this.handleChange} autoComplete=\"equipmentOwnerPhone\"/>\n                    </FormGroup>\n                    <FormGroup>\n                        <Label for=\"equipmentOwnerEmail\">Owner Email</Label>\n                        <Input type=\"text\" name=\"equipmentOwnerEmail\" id=\"equipmentOwnerEmail\" value={item.equipmentOwnerEmail || ''}\n                               onChange={this.handleChange} autoComplete=\"equipmentOwnerEmail\"/>\n                    </FormGroup>\n\n                    <FormGroup>\n                        <Button color=\"primary\" type=\"submit\">Save</Button>{'  '}\n                        <Button color=\"secondary\" tag={Link} to=\"/equipment\">Cancel</Button>\n                    </FormGroup>\n                </Form>\n            </Container>\n        </div>\n    }\n}\n\nexport default withRouter(EquipmentEdit);\n","import React, {Component} from 'react';\nimport {withRouter} from 'react-router-dom';\nimport auth0Client from './Auth';\n\nclass Callback extends Component {\n    async componentDidMount() {\n        await auth0Client.handleAuthentication();\n        this.props.history.replace('/');\n    }\n\n    render() {\n        return (\n            <p>Loading profile...</p>\n        );\n    }\n}\n\nexport default withRouter(Callback);\n","import React from 'react';\nimport {Route} from 'react-router-dom';\nimport auth0Client from '../Auth';\n\nfunction SecuredRoute(props) {\n    const {component: Component, path, checkingSession} = props;\n    return (\n        <Route path={path} render={() => {\n            if (checkingSession) return <h3 className=\"text-center\">Validating session...</h3>;\n            if (!auth0Client.isAuthenticated()) {\n                auth0Client.signIn();\n                return <div></div>;\n            }\n            return <Component />\n        }} />\n    );\n}\n\nexport default SecuredRoute;\n","import React, { Component } from 'react';\nimport './App.css';\nimport Home from './Home';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport EquipmentList from './EquipmentList';\nimport EquipmentEdit from \"./EquipmentEdit\";\nimport EquipmentCheckout from \"./EquipmentCheckout\";\nimport EquipmentCheckin from \"./EquipmentCheckin\";\nimport Callback from './Callback';\nimport SecuredRoute from './SecuredRoute/SecuredRoute';\nimport auth0Client from './Auth';\n\n\nclass App extends Component {\n    async componentDidMount() {\n        if (this.props.location.pathname === '/callback') return;\n        try {\n            await auth0Client.silentAuth();\n            this.forceUpdate();\n        } catch (err) {\n            if (err.error !== 'login_required') console.log(err.error);\n        }\n    }\n\n    render() {\n    return (\n        <Router>\n          <Switch>\n            <Route path='/' exact={true} component={Home}/>\n            <SecuredRoute path='/equipment' exact={true} component={EquipmentList}/>\n            <SecuredRoute path='/equipmentedit/:id' component={EquipmentEdit}/>\n            <SecuredRoute path='/equipmentcheckout/:id' component={EquipmentCheckout}/>\n            <SecuredRoute path='/equipmentcheckin/:id' component={EquipmentCheckin}/>\n\n            <Route exact path='/callback' component={Callback}/>\n          </Switch>\n        </Router>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}